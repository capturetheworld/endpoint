{"ast":null,"code":"var _jsxFileName = \"/Users/ian/code/endpoint/src/components/exporer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { inputdata } from '../input/getusers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst input = inputdata;\nlet submitText = \"Send request\";\nlet setType = \"\";\nlet fields = [];\nconst Page = () => {\n  _s();\n  const [isShown, setIsShown] = useState(false);\n  const handleClick = event => {\n    setIsShown(true);\n  };\n  setType = inputdata.method;\n  switch (inputdata.method) {\n    case \"GET\":\n      fields = [{\n        name: 'id',\n        type: 'text'\n      }];\n      break;\n    case \"POST\":\n      break;\n    case \"PUT\":\n      break;\n    case \"DELETE\":\n      break;\n  }\n  let builder = {};\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: input.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), input.method, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \"Base URL: \", input.url, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: submitText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"reset\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'lightblue'\n      },\n      children: isShown && /*#__PURE__*/_jsxDEV(Output, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Page, \"AfL4AMulNN2iutG1qDR77gnp7oc=\");\n_c = Page;\nconst Output = () => {\n  _s2();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading response...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(items, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s2(Output, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n_c2 = Output;\nconst Form = props => {};\n_c3 = Form;\nexport default Page;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Output\");\n$RefreshReg$(_c3, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","inputdata","input","submitText","setType","fields","Page","isShown","setIsShown","handleClick","event","method","name","type","builder","console","log","title","url","backgroundColor","Output","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","message","JSON","stringify","Form","props"],"sources":["/Users/ian/code/endpoint/src/components/exporer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { inputdata } from '../input/getusers.js';\n\nconst input = inputdata;\nlet submitText = \"Send request\";\n\nlet setType = \"\";\nlet fields = [];\n\nconst Page = () => {\n    const [isShown, setIsShown] = useState(false);\n    const handleClick = event => {\n        setIsShown(true);\n    };\n\n    setType = inputdata.method;\n\n    switch (inputdata.method) {\n        case \"GET\":\n            fields = [\n                {\n                    name: 'id',\n                    type: 'text',\n                }\n            ];\n            break;\n        case \"POST\":\n            break;\n        case \"PUT\":\n            break;\n        case \"DELETE\":\n            break;\n\n    }\n\n\n    \n\n\n    let builder = {};\n\n\n    console.log(input);\n\n    return (\n        <div>\n            <h1>{input.title}</h1>\n            {input.method}\n            <br></br>\n            <br></br>\n            Base URL: {input.url}\n            <br></br>\n            <br></br>\n            <button onClick={handleClick}>{submitText}</button> <input type=\"reset\"> </input>\n            <br></br>\n            <div style={{ backgroundColor: 'lightblue' }}>\n                {isShown && <Output />}\n            </div>\n            {/* {input.body} */}\n\n        </div>\n    )\n\n\n\n}\n\nconst Output = () => {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    else if (!isLoaded) {\n        return <div>Loading response...</div>;\n    }\n    else {\n        return (\n            <div><pre>{JSON.stringify(items, null, 2)}</pre></div>\n        );\n    }\n};\n\n\nconst Form = (props) => {\n\n}\n\nexport default Page;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}