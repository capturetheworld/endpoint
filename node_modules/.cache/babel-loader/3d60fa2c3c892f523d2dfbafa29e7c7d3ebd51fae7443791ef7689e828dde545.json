{"ast":null,"code":"var _jsxFileName = \"/Users/ian/code/endpoint/src/components/search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page = () => {\n  _s();\n  const [greeting, setGreeting] = useState('Hello Function Component!');\n  const handleChange = event => setGreeting(event.target.value);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" \", item.price]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n};\n_s(Page, \"Z24gC+CCkPGs7t4idghxbTYlYCs=\");\n_c = Page;\nconst Headline = _ref => {\n  let {\n    headline,\n    onChangeHeadline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: headline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: headline,\n      onChange: onChangeHeadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Headline;\nexport default Page;\nvar _c, _c2;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Headline\");","map":{"version":3,"names":["React","useState","Page","greeting","setGreeting","handleChange","event","target","value","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","map","item","name","price","id","Headline","headline","onChangeHeadline"],"sources":["/Users/ian/code/endpoint/src/components/search.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\nconst Page = () => {\n    const [greeting, setGreeting] = useState(\n      'Hello Function Component!'\n    );\n  \n    const handleChange = event => setGreeting(event.target.value);\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n  \n    // Note: the empty deps array [] means\n    // this useEffect will run once\n    // similar to componentDidMount()\n    useEffect(() => {\n      fetch(\"https://api.example.com/items\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            setIsLoaded(true);\n            setItems(result);\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }, [])\n  \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.id}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  \n  \n\n  };\n\n  \n  \n  const Headline = ({ headline, onChangeHeadline }) => (\n    <div>\n      <h1>{headline}</h1>\n  \n      <input type=\"text\" value={headline} onChange={onChangeHeadline} />\n    </div>\n  );\n  \n  export default Page;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAGxC,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CACtC,2BAA2B,CAC5B;EAED,MAAMI,YAAY,GAAGC,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAE7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACAc,SAAS,CAAC,MAAM;IACdC,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CACFG,MAAM,IAAK;MACVR,WAAW,CAAC,IAAI,CAAC;MACjBE,QAAQ,CAACM,MAAM,CAAC;IAClB,CAAC;IACD;IACA;IACA;IACCX,KAAK,IAAK;MACTG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CACF;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACT,oBAAO;MAAA,sBAAaA,KAAK,CAACY,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAC1C,CAAC,MAAM,IAAI,CAACV,QAAQ,EAAE;IACpB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAC9B,CAAC,MAAM;IACL,oBACE;MAAA,UACGE,KAAK,CAACS,GAAG,CAACC,IAAI,iBACb;QAAA,WACGA,IAAI,CAACC,IAAI,OAAGD,IAAI,CAACE,KAAK;MAAA,GADhBF,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAET;AAIF,CAAC;AAAC,GAlDExB,IAAI;AAAA,KAAJA,IAAI;AAsDR,MAAMyB,QAAQ,GAAG;EAAA,IAAC;IAAEC,QAAQ;IAAEC;EAAiB,CAAC;EAAA,oBAC9C;IAAA,wBACE;MAAA,UAAKD;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eAEnB;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEA,QAAS;MAAC,QAAQ,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAAA,CACP;AAAC,MANIF,QAAQ;AAQd,eAAezB,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}