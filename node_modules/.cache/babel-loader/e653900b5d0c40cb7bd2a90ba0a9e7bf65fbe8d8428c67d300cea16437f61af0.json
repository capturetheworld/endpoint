{"ast":null,"code":"var _jsxFileName = \"/Users/ian/code/endpoint/src/components/search.js\";\nimport React, { useState, useEffect } from 'react';\nimport { inputdata } from '../input/createuser.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst input = inputdata;\nconst Page = () => {\n  // const [greeting, setGreeting] = useState(\n  //     'Hello Function Component!'\n  // );\n\n  // const [error, setError] = useState(null);\n  // const [isLoaded, setIsLoaded] = useState(false);\n  // const [items, setItems] = useState([]);\n\n  // // Note: the empty deps array [] means\n  // // this useEffect will run once\n  // // similar to componentDidMount()\n  // useEffect(() => {\n  //     fetch(\"https://api.example.com/items\")\n  //         .then(res => res.json())\n  //         .then(\n  //             (result) => {\n  //                 setIsLoaded(true);\n  //                 setItems(result);\n  //             },\n  //             // Note: it's important to handle errors here\n  //             // instead of a catch() block so that we don't swallow\n  //             // exceptions from actual bugs in components.\n  //             (error) => {\n  //                 setIsLoaded(true);\n  //                 setError(error);\n  //             }\n  //         )\n  // }, [])\n\n  // if (error) {\n  //     return <div>Error: {error.message}</div>;\n  // } else if (!isLoaded) {\n  //     return <div>Loading...</div>;\n  // } else {\n  //     return (\n  //         <ul>\n  //             {items.map(item => (\n  //                 <li key={item.id}>\n  //                     {item.name} {item.price}\n  //                 </li>\n  //             ))}\n  //         </ul>\n  //     );\n  // }\n\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [input.method, input.url]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_c = Page;\nconst Headline = _ref => {\n  let {\n    headline,\n    onChangeHeadline\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: headline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: headline,\n      onChange: onChangeHeadline\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Headline;\nexport default Page;\nvar _c, _c2;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Headline\");","map":{"version":3,"names":["React","useState","useEffect","inputdata","input","Page","console","log","method","url","Headline","headline","onChangeHeadline"],"sources":["/Users/ian/code/endpoint/src/components/search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {inputdata} from '../input/createuser.js';\n\nconst input = inputdata;\n \nconst Page = () => {\n    // const [greeting, setGreeting] = useState(\n    //     'Hello Function Component!'\n    // );\n \n\n\n    // const [error, setError] = useState(null);\n    // const [isLoaded, setIsLoaded] = useState(false);\n    // const [items, setItems] = useState([]);\n\n    // // Note: the empty deps array [] means\n    // // this useEffect will run once\n    // // similar to componentDidMount()\n    // useEffect(() => {\n    //     fetch(\"https://api.example.com/items\")\n    //         .then(res => res.json())\n    //         .then(\n    //             (result) => {\n    //                 setIsLoaded(true);\n    //                 setItems(result);\n    //             },\n    //             // Note: it's important to handle errors here\n    //             // instead of a catch() block so that we don't swallow\n    //             // exceptions from actual bugs in components.\n    //             (error) => {\n    //                 setIsLoaded(true);\n    //                 setError(error);\n    //             }\n    //         )\n    // }, [])\n\n    // if (error) {\n    //     return <div>Error: {error.message}</div>;\n    // } else if (!isLoaded) {\n    //     return <div>Loading...</div>;\n    // } else {\n    //     return (\n    //         <ul>\n    //             {items.map(item => (\n    //                 <li key={item.id}>\n    //                     {item.name} {item.price}\n    //                 </li>\n    //             ))}\n    //         </ul>\n    //     );\n    // }\n\n    console.log(input);\n\n    return(\n        <div> \n            {input.method}\n            {input.url}\n            {/* {input.body} */}\n\n        </div>\n    )\n\n\n \n}\n\n\n\nconst Headline = ({ headline, onChangeHeadline }) => (\n    <div>\n        <h1>{headline}</h1>\n\n        <input type=\"text\" value={headline} onChange={onChangeHeadline} />\n    </div>\n);\n\nexport default Page;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,SAAS,QAAO,wBAAwB;AAAC;AAEjD,MAAMC,KAAK,GAAGD,SAAS;AAEvB,MAAME,IAAI,GAAG,MAAM;EACf;EACA;EACA;;EAIA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAElB,oBACI;IAAA,WACKA,KAAK,CAACI,MAAM,EACZJ,KAAK,CAACK,GAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAGR;AAKd,CAAC;AAAA,KA7DKJ,IAAI;AAiEV,MAAMK,QAAQ,GAAG;EAAA,IAAC;IAAEC,QAAQ;IAAEC;EAAiB,CAAC;EAAA,oBAC5C;IAAA,wBACI;MAAA,UAAKD;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eAEnB;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEA,QAAS;MAAC,QAAQ,EAAEC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAChE;AAAA,CACT;AAAC,MANIF,QAAQ;AAQd,eAAeL,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}